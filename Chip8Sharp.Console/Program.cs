using Chip8Sharp.Library;
using SixLabors.ImageSharp;
using SixLabors.ImageSharp.PixelFormats;

void CreateChip8Img(Chip8 comp, string output)
{
    Image<Rgba32> img = new Image<Rgba32>(Chip8.DISPLAY_WIDTH, Chip8.DISPLAY_HEIGHT);

    for (int y = 0; y < Chip8.DISPLAY_HEIGHT; y++)
    {
        for (int x = 0; x < Chip8.DISPLAY_WIDTH; x++)
        {
            var pixIndex = (y * Chip8.DISPLAY_WIDTH) + x;
            img[x, y] = comp.Display[pixIndex] ? Rgba32.ParseHex("FFFFFF") : Rgba32.ParseHex("000000");
        }
    }

    img.Save(output);
}

Chip8 computer = Chip8.Create();

// IBM Logo Program
var ibmLogoProgram = new byte[]
{   
    0x00, 0xe0, 0xa2, 0x2a, 0x60, 0x0c, 0x61, 0x08, 0xd0, 0x1f, 0x70, 0x09,
    0xa2, 0x39, 0xd0, 0x1f, 0xa2, 0x48, 0x70, 0x08, 0xd0, 0x1f, 0x70, 0x04,
    0xa2, 0x57, 0xd0, 0x1f, 0x70, 0x08, 0xa2, 0x66, 0xd0, 0x1f, 0x70, 0x08,
    0xa2, 0x75, 0xd0, 0x1f, 0x12, 0x28, 0xff, 0x00, 0xff, 0x00, 0x3c, 0x00,
    0x3c, 0x00, 0x3c, 0x00, 0x3c, 0x00, 0xff, 0x00, 0xff, 0xff, 0x00, 0xff,
    0x00, 0x38, 0x00, 0x3f, 0x00, 0x3f, 0x00, 0x38, 0x00, 0xff, 0x00, 0xff,
    0x80, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0x80, 0x00, 0x80, 0x00, 0xe0, 0x00,
    0xe0, 0x00, 0x80, 0xf8, 0x00, 0xfc, 0x00, 0x3e, 0x00, 0x3f, 0x00, 0x3b,
    0x00, 0x39, 0x00, 0xf8, 0x00, 0xf8, 0x03, 0x00, 0x07, 0x00, 0x0f, 0x00,
    0xbf, 0x00, 0xfb, 0x00, 0xf3, 0x00, 0xe3, 0x00, 0x43, 0xe0, 0x00, 0xe0,
    0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0xe0, 0x00, 0xe0
};

ibmLogoProgram.CopyTo(computer.RAM, Chip8.PC_START_ADDRESS);
Console.WriteLine("Hello, World!");
for (int i = 0; i < 64; i++)
{
    computer.Step();
    if (i % 1 == 0)
    {
        CreateChip8Img(computer, $"{i}.png");
    }
}


